version: "3"
services:
  app:
    build:
      context: ./docker/8.0-fpm
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: sail-8.0/app
    user: root
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
    ports:
      - '80:80'
    volumes:
      - '.:/var/www/html'
      - ./docker/8.0-fpm/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
      - ./docker/8.0-fpm/php.ini:/etc/php/8.0/fpm/conf.d/99-sail.ini
      - ./docker/8.0-fpm/php.ini:/etc/php/8.0/cli/conf.d/99-sail.ini
      - ./docker/8.0-fpm/www.conf:/etc/php/8.0/fpm/pool.d/www.conf
    networks:
      - sail2
    depends_on:
      - pgsql

  pgsql:
    image: 'postgres'
    ports:
      - '${DB_DOCKER_PORT_EXTERNAL:-5432}:5432'
    environment:
      PGUSER: '${DB_USERNAME:-postgres}'
      PGPASSWORD: '${DB_PASSWORD:-123456}'
      POSTGRES_DB: '${DB_DATABASE:-evsaas}'
      POSTGRES_USER: '${DB_USERNAME:-postgres}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-123456}'
    volumes:
      - 'sail2pgsql:/var/lib/postgresql/data'
    networks:
      - sail2

  cache:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'sail2redis:/data'
    networks:
      - sail2
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s

#  apache:
#    image: 'bitnami/apache:latest'
#    ports:
#      - '80:8080'
#      - '443:8443'
#    environment:
#      - APACHE_HTTP_PORT_NUMBER=8080
#      - APACHE_HTTPS_PORT_NUMBER=8443
#    volumes:
#      - ./docker/httpd/my_vhosts.conf:/vhosts/my_vhosts.conf:ro
#      - ./docker/httpd/ssl:/certs
#    networks:
#      - sail2

  nginx:
    depends_on:
      - app
    image: nginx:alpine
    ports:
      - 85:80
      - 444:443
    volumes:
      - ./docker/nginx/default-fpm-proxy.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/conf.d/
    networks:
      - sail2


#  cypress:
#    depends_on:
#      - nginx
#    image: cypress/included:7.6.0
#    volumes:
#      - .:/src/
#    environment:
#      - CYPRESS_BASE_URL=${CYPRESS_BASEURL}
#      - CYPRESS_RECORD_KEY=${CYPRESS_RECORDKEY}
#    working_dir: /src/
#    networks:
#      - sail2

networks:
  sail2:
    driver: bridge
volumes:
  sail2pgsql:
    driver: local
  sail2redis:
    driver: local
